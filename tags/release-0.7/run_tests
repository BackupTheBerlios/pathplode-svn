#! /bin/bash
#
# test suite for pathplode
#
# (c) 2004 Ulf Klaperski
#
#
# $Id$

prog_type=$1

if [ "$prog_type" = "c++" ]; then
    binary=./pathplode
    has_regex=0
elif [ "$prog_type" = "perl" ]; then
    binary=./pathplode.pl
    has_regex=1
else
    binary=./pathplode
    has_regex=0    
fi

tests=0
tests_ok=0
tests_failed=0

perform_test () {
    expect=$1
    shift
    exp_status=$1
    shift
    if [ "$exp_status" == "" ]; then
	exp_status=0
    fi
    result=`$binary $@ $TESTPATH`;
    status=$?

    echo "================================================================================"
    echo "Testpath: $TESTPATH"
    echo "Command:  $@"
    echo "Result:   $result"
    if [ $status -ne $exp_status ]; then
	echo "Warning: Unexpected exit status $status. (Expected $exp_status) Forcing FAIL status."
    fi

    let "tests += 1"
    if [ "$result" == "$expect" -a $status -eq $exp_status ]; then
	echo 'OK!'
	let "tests_ok += 1"
    else 
	echo "FAIL: expected $expect"
	let "tests_failed += 1"
    fi
}


export TESTPATH=/bin:/usr/games:/home/ulf/gnu/bin:/home/ulf/bin:/usr/local/bin:/usr/bin:/bin:/usr/bin/X11:/usr/games
echo $TESTPATH

# T0: uniquify command
RESULTPATH="/bin:/usr/games:/home/ulf/gnu/bin:/home/ulf/bin:/usr/local/bin:/usr/bin:/usr/bin/X11"
perform_test $RESULTPATH 0 "--uniquify"
# T1: insert /opt/bin after the first and only entry that contains "gnu" (prepend/after)
if [ $has_regex = 1 ]; then hook="gnu"; else hook="/home/ulf/gnu/bin"; fi
echo $hook
RESULTPATH="/bin:/usr/games:/home/ulf/gnu/bin:/opt/bin:/home/ulf/bin:/usr/local/bin:/usr/bin:/bin:/usr/bin/X11:/usr/games"
perform_test $RESULTPATH 0 "--after $hook --prepend /opt/bin"

# T2: insert /opt/bin before the first and only entry that contains "gnu" (prepend/before)
if [ $has_regex = 1 ]; then hook="gnu"; else hook="/home/ulf/gnu/bin"; fi
RESULTPATH="/bin:/usr/games:/opt/bin:/home/ulf/gnu/bin:/home/ulf/bin:/usr/local/bin:/usr/bin:/bin:/usr/bin/X11:/usr/games"
perform_test $RESULTPATH 0 "--before $hook --prepend /opt/bin"

# T3: T2 with short options
if [ $has_regex = 1 ]; then hook="gnu"; else hook="/home/ulf/gnu/bin"; fi
RESULTPATH="/bin:/usr/games:/opt/bin:/home/ulf/gnu/bin:/home/ulf/bin:/usr/local/bin:/usr/bin:/bin:/usr/bin/X11:/usr/games"
perform_test $RESULTPATH 0 "-B $hook -p /opt/bin"

# T4: insert /opt/bin before the first and only entry that contains "gnu" with mixed options -> T2
if [ $has_regex = 1 ]; then hook="gnu"; else hook="/home/ulf/gnu/bin"; fi
RESULTPATH="/bin:/usr/games:/opt/bin:/home/ulf/gnu/bin:/home/ulf/bin:/usr/local/bin:/usr/bin:/bin:/usr/bin/X11:/usr/games"
perform_test $RESULTPATH 0 "--before $hook -p /opt/bin"

# T5: insert /opt/bin before the last and only entry that contains "gnu" with short options (append/before)
if [ $has_regex = 1 ]; then hook="gnu"; else hook="/home/ulf/gnu/bin"; fi
RESULTPATH="/bin:/usr/games:/opt/bin:/home/ulf/gnu/bin:/home/ulf/bin:/usr/local/bin:/usr/bin:/bin:/usr/bin/X11:/usr/games"
perform_test $RESULTPATH 0 "-B $hook -a /opt/bin"

# T6: insert /opt/bin after the last entry that contains "bin" with short options (append/after)
if [ $has_regex = 1 ]; then hook="bin"; else hook="/usr/bin/X11"; fi
RESULTPATH="/bin:/usr/games:/home/ulf/gnu/bin:/home/ulf/bin:/usr/local/bin:/usr/bin:/bin:/usr/bin/X11:/opt/bin:/usr/games"
perform_test $RESULTPATH 0 "-A $hook -a /opt/bin"

# T7: insert UPPERCASE_PATH after last entry that contains "local/"
if [ $has_regex = 1 ]; then hook="local/"; else hook="/usr/local/bin"; fi
RESULTPATH="/bin:/usr/games:/home/ulf/gnu/bin:/home/ulf/bin:/usr/local/bin:UPPERCASE_PATH:/usr/bin:/usr/bin/X11"
perform_test $RESULTPATH 0 " -A $hook -a UPPERCASE_PATH -u"

# T8: insert /opt/gcc/bin at the beginning (prepend/begin)
RESULTPATH="/opt/gcc/bin:/bin:/usr/games:/home/ulf/gnu/bin:/home/ulf/bin:/usr/local/bin:/usr/bin:/bin:/usr/bin/X11:/usr/games"
perform_test $RESULTPATH 0 "-p /opt/gcc/bin"

# T9: insert /usr/X11R6/bin at the end (append/end)
RESULTPATH="/bin:/usr/games:/home/ulf/gnu/bin:/home/ulf/bin:/usr/local/bin:/usr/bin:/bin:/usr/bin/X11:/usr/games:/usr/X11R6/bin"
perform_test $RESULTPATH 0 "-a /usr/X11R6/bin"

# T10: prepend /home/ulf/Linux/bin/ uniquely (prepend/begin)
# note: /usr/games is present with and without a trailing slash
export TESTPATH=/bin:/usr/games/:/home/ulf/gnu/bin:/home/ulf/bin:/usr/local/bin:/usr/bin:/bin:/usr/bin/X11:/usr/games
export RESULTPATH="/home/ulf/Linux/bin:/bin:/usr/games:/home/ulf/gnu/bin:/home/ulf/bin:/usr/local/bin:/usr/bin:/usr/bin/X11"
perform_test $RESULTPATH 0 "-p /home/ulf/Linux/bin/ -u"

# T11: prepend /opt/gcc-3.3/bin at beginning (prepend/begin+before)
# note: /bin has a trailing slash
export TESTPATH=/bin/:/usr/games/:/home/ulf/gnu/bin:/home/ulf/bin:/usr/local/bin:/usr/bin:/bin:/usr/bin/X11:/usr/games
export RESULTPATH=/opt/gcc-3.3/bin:/bin:/usr/games:/home/ulf/gnu/bin:/home/ulf/bin:/usr/local/bin:/usr/bin:/bin:/usr/bin/X11:/usr/games
perform_test $RESULTPATH 0 "-B /bin -p /opt/gcc-3.3/bin"

# T12: prepend /opt/gcc-3.3/bin at the end (append/end)
export RESULTPATH=/bin:/usr/games:/home/ulf/gnu/bin:/home/ulf/bin:/usr/local/bin:/usr/bin:/bin:/usr/bin/X11:/usr/games:/opt/gcc-3.3/bin
perform_test $RESULTPATH 0 "-a /opt/gcc-3.3/bin"

# T13: remove /bin at beginning (remove-first/begin)
export RESULTPATH=/usr/games:/home/ulf/gnu/bin:/home/ulf/bin:/usr/local/bin:/usr/bin:/bin:/usr/bin/X11:/usr/games
perform_test $RESULTPATH 0 "-f /bin"

# T14: remove /home/ulf/gnu/bin (remove-first)
export RESULTPATH=/bin:/usr/games:/home/ulf/bin:/usr/local/bin:/usr/bin:/bin:/usr/bin/X11:/usr/games
perform_test $RESULTPATH 0 "-f /home/ulf/gnu/bin"

# T15: remove 2nd /bin with after (remove-first/after)
export RESULTPATH=/bin:/usr/games:/home/ulf/gnu/bin:/home/ulf/bin:/usr/local/bin:/usr/bin:/usr/bin/X11:/usr/games
perform_test $RESULTPATH 0 "-A /usr/bin --remove-first /bin"

# T16: remove 2nd /bin with before (remove-first/before)
perform_test $RESULTPATH 0 "-B /usr/bin/X11 --remove-first /bin"

# T17: remove all /bin (remove-all)
export RESULTPATH=/usr/games:/home/ulf/gnu/bin:/home/ulf/bin:/usr/local/bin:/usr/bin:/usr/bin/X11:/usr/games
perform_test $RESULTPATH 0 "--remove-all /bin"

# T18: remove 2nd /bin (remove-last)
export RESULTPATH=/bin:/usr/games:/home/ulf/gnu/bin:/home/ulf/bin:/usr/local/bin:/usr/bin:/usr/bin/X11:/usr/games
perform_test $RESULTPATH 0 "-l /bin"

# T19: remove 2nd /usr/games (remove-last/end)
export RESULTPATH=/bin:/usr/games:/home/ulf/gnu/bin:/home/ulf/bin:/usr/local/bin:/usr/bin:/bin:/usr/bin/X11
perform_test $RESULTPATH 0 "-l /usr/games"

# T20: remove 1st /usr/games (remove-last/after)
export RESULTPATH=/bin:/home/ulf/gnu/bin:/home/ulf/bin:/usr/local/bin:/usr/bin:/bin:/usr/bin/X11:/usr/games
perform_test $RESULTPATH 0 "-A /bin -l /usr/games"

# T21: remove 1st /usr/games (remove-last/before)
export RESULTPATH=/bin:/home/ulf/gnu/bin:/home/ulf/bin:/usr/local/bin:/usr/bin:/bin:/usr/bin/X11:/usr/games
perform_test $RESULTPATH 0 "-B /home/ulf/gnu/bin -l /usr/games"

# T22: multiple commands with same option
export RESULTPATH=/bin:/first/path:/home/ulf/gnu/bin:/home/ulf/bin:/usr/local/bin:/usr/bin:/bin:/usr/bin/X11:/usr/games
perform_test $RESULTPATH 0 "-B /home/ulf/gnu/bin -l /usr/games -p /first/path"

# T23: multiple commands with different options
export RESULTPATH=/first/path:/bin:/home/ulf/gnu/bin:/home/ulf/bin:/usr/local/bin:/usr/bin:/bin:/usr/bin/X11:/usr/games
perform_test $RESULTPATH 0 "-B /home/ulf/gnu/bin -l /usr/games -r -p /first/path"

export TESTPATH=/usr/games:/bin:/usr/games/:/home/ulf/gnu/bin:/usr/local/bin:/usr/bin:/bin:/usr/bin/X11:/usr/games
# T24: test unslashify - must remove first /usr/games
export RESULTPATH=/bin:/usr/games:/home/ulf/gnu/bin:/usr/local/bin:/usr/bin:/bin:/usr/bin/X11:/usr/games
perform_test $RESULTPATH 0 "-f /usr/games/"

# T25: test unslashify switched off - must remove second /usr/games
export RESULTPATH=/usr/games:/bin:/home/ulf/gnu/bin:/usr/local/bin:/usr/bin:/bin:/usr/bin/X11:/usr/games
perform_test $RESULTPATH 0 "-P -f /usr/games/"

export TESTPATH='B4-A22-L43-G1'
# T26: test alternate separator
export RESULTPATH='B4-A11-L43-G1'
perform_test $RESULTPATH 0 "-f A22 -A B4 -p A11 -S -"

export TESTPATH=/usr/games:/bin::/home/ulf/gnu/bin:/usr/local/bin:/usr/bin:/bin:/usr/bin/X11:/usr/games
# T27: test empty path - must be removed
export RESULTPATH=/usr/games:/bin:/home/ulf/gnu/bin:/usr/local/bin:/usr/bin:/bin:/usr/bin/X11
perform_test $RESULTPATH 0 "-l /usr/games/"

# T28: test empty path with allow_empty - must not be removed
export RESULTPATH=/usr/games:/bin::/home/ulf/gnu/bin:/usr/local/bin:/usr/bin:/bin:/usr/bin/X11
perform_test $RESULTPATH 0 "-l /usr/games/ -E"

export TESTPATH='A17:B4:A22:L43:G1:A27'
# T29: test after-hook with regex
export RESULTPATH=A17:B4:A22:NEW:L43:G1:A27
perform_test $RESULTPATH 0 "-R -A A[23] -p NEW "

# T30: test before-hook with regex
export RESULTPATH=A17:B4:NEW:A22:L43:G1:A27
perform_test $RESULTPATH 0 "-R -B A[23] -p NEW "

# T31: test remove-first with regex
export RESULTPATH=A17:B4:L43:G1:A27
perform_test $RESULTPATH 0 "-R -f A[23] "

# T32: test remove-all with regex
export RESULTPATH=A17:B4:L43:G1
perform_test $RESULTPATH 0 "-R -d A[23] "

# T33: test remove-last with regex
export RESULTPATH=A17:B4:A22:L43:G1
perform_test $RESULTPATH 0 "-R -l A[23] "

# T34: test remove-first/after with regex
export RESULTPATH=A17:B4:A22:L43:G1
perform_test $RESULTPATH 0 "-R -A G -f A[23] "

# T35: test remove-last/after + append/after with regex
export RESULTPATH=A17:B4:L43:NEW:G1:A27
perform_test $RESULTPATH 0 "-R -B L -l A[23] -A 4 -a NEW "


if [ "$prog_type" = "c++" ]; then
    TESTPATH=/bin:/usr/games:/home/ulf/gnu/bin:/home/ulf/bin:/usr/local/bin:/usr/bin:/bin:/usr/bin/X11:/usr/games
    RESULTPATH=$TESTPATH
    perform_test $RESULTPATH 1 -f /path/does/not/exist 
    perform_test $RESULTPATH 0 -d /path/does/not/exist 
    perform_test $RESULTPATH 1 -B /path/does/not/exist -a /new/path
    perform_test $RESULTPATH 1 -A /path/does/not/exist -p /new/path
fi

echo "================================================================================"
echo "Summary: $tests tests, $tests_ok passed, $tests_failed failed"
